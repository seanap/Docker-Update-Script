#!/bin/bash
source $HOME/.bashrc

# Help File
Help()
{
   # Display Help
   echo "   docker-compose [Down | Pull | Up | rmi]"
   echo
   echo "   Syntax: dup [-h|o] [SERVICE]"
   echo "   options:"
   echo "       -h      Print this Help."
   echo
   echo "       -o      Only runs on a specific container"
   echo -e "               Example: ${GREEN}dup -o plex${NC} #Only update the Plex image"
   echo
   echo -e "   <none>      Updates ALL containers in ${CYAN}docker-compose.yml${NC}"
   echo -e "               Example: ${GREEN}dup${NC}"
   echo
}

# Set Variables
service=''
CYAN='\033[0;36m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Get the options
while getopts ":ho:" option; do
   case $option in
      h) # display Help
         Help
         exit;;
      o) service=${OPTARG};;
     \?) # incorrect option
         echo "Error: Invalid option"
         exit;;
   esac
done

echo -e "${CYAN}Change dir to $HOME where your docker-compose.yml file is located${NC}"
cd

if [[ $service ]]
then
  echo -e "${CYAN}Stopping $service container...${NC}"
  docker-compose rm -fsv $service
else
  echo -e "${CYAN}Stopping all containers...${NC}"
  docker-compose down
fi
echo -e "${GREEN}Finished Stopping${NC}"

if [[ $service ]]
then
  echo -e "${CYAN}Pulling $service container...${NC}"
  docker-compose pull $service
else
  echo -e "${CYAN}Pulling all containers...${NC}"
  docker-compose pull
fi
echo -e "${GREEN}Finished Pull${NC}"

if [[ $service ]]
then
  echo -e "${CYAN}Starting $service container...${NC}"
  docker-compose up -d --force-recreate $service
else
  echo -e "${CYAN}Starting all containers...${NC}"
  docker-compose up -d --force-recreate
fi
echo -e "${GREEN}Successfully recreated and started containers${NC}"

echo -e "${CYAN}Deleting the old unused container images...${NC}"
docker images -q -f dangling=true | xargs --no-run-if-empty --delim='\n' docker rmi
echo -e "${GREEN}Successfully cleaned up${NC}"
echo -e "${GREEN}FINISHED${NC}"
